name: Telerik-Github-Actions-Practice

on: [push]
jobs:
  build:
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Install Crystal
      uses: crystal-lang/install-crystal@v1

    - name: Run tests
      run: crystal spec

    - name: Run Crystal
      run: |
        crystal src/game-of-life.cr
        pwd
        ls -lah
    
    - name: Build crystal
    - working-directory: ./code
      run: |
        crystal build src/game-of-life.cr
        pwd
        ls -lah
        ll

    # Dani Rankov gave excellent reason why I need to 
    # ditch the scp approach - "Change your thinking from a pet to a herd".
    # So I'm migrating to a GitHub artifact and later on - to jFrog Artifactory
    #   run: "scp -rC -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null * ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/gha/github-actions/"
    #   # TODO: Create unique directory on upload (in HH:MM:SS:DD:MM:YYYY format)
    # - name: checkout
    # - uses: actions/checkout@v2

    # # - run: mkdir -p path/to/artifact
    # # - run: echo hello > path/to/artifact/world.txt
    # - name: Build the app
    # - run: |
    #     crystal build code/hello-world.cr
    #     ./code/hello-world

    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: hello-world artifact
    #     path: hello-world
